<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:p="http://www.springframework.org/schema/p"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-4.3.xsd
   http://www.springframework.org/schema/mvc
   http://www.springframework.org/schema/mvc/spring-mvc.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop-4.3.xsd"
   >   
   
   
   <!-- HandlerMapping : HTTP 요청정보를 이용해서 컨트롤러를 찾아주는 기능-->
   <mvc:annotation-driven/>
   

   <!-- ViewResolver세팅 (jsp)  prefix : 접두어(처음에붙는것들) suffix : 접미어(끝에붙는것들) -->
   <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="prefix" value="/WEB-INF/views/"/>
      <property name="suffix" value=".jsp"/>
   </bean>

   <!-- Mybatis활용한 sql 커넥션 정보 설정  -->
   <bean id="dataSourceSpied" class = "org.apache.commons.dbcp.BasicDataSource"
      destroy-method = "close"
      p:driverClassName="oracle.jdbc.driver.OracleDriver"
      p:url=""
      p:username=""
      p:password=""
   />
   
   
   <!-- #dataSource : DB 커넥션 정보 설정
      DB 커넥션 정보를 BasicDataSource타입으로 
      destroy-method : 해당 bean 객체의 스코프가 끝났을경우, close() 메서드를 호출하겠다~
   -->
   <bean id="dataSource" class = "net.sf.log4jdbc.Log4jdbcProxyDataSource">
      <constructor-arg ref="dataSourceSpied"/>
      <property name="logFormatter">
         <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
            <property name="loggingType" value="MULTI_LINE"/>
            <property name="sqlPrefix" value="SQL : "/>
         </bean>
      </property>
   </bean>
   
   
   <!-- 커넥션 풀 역할 sqlSessionFactory (*매퍼 : sql문을 작성해놓을 xml 파일들)
      필요한것 : 디비연결정보, 매퍼위치와 type alias에 대한 정보 (mybatis 설정정보 : mybatis-config.xml)
                        (ref는 위에 bean id와 동일하게 / mybatis 설정을 해줄것이다)
      -> mybatis엥서 커넥션 풀, 커넥션 생성 (커넥션 = 세션)            
   -->
   <bean id = "sqlSessionFactory" class = "org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource"/>
      <property name="configLocation" value="/WEB-INF/mybatis/mybatis-config.xml"/>
   </bean>
   
   <!-- sqlSession : sql 실행하기 위해 필요한 커넥션 같은 코드
      destroy-method="clearCache" : 마이바티스의 장점중 하나인 캐시(최초접속시 사용자 정보 저장해놓고 다음 접속시 빠르게처리)를 지우는 처리
   -->
   <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
      <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
   </bean>
   
	<!-- 사진 업로드 시 필요한 bean -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
	</bean>
	
	<!-- 한글깨짐 방지 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 한글깨짐 방지 -->
	<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>



















   
</beans>